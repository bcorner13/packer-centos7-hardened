{
  "description": "Build non-marketplace hardened CentOS7 template",
  "variables": {
    "region": "us-east-1",
    "project_name": "centos7",
    "build_stage": "base",
    "aws_ami_users": "",
    "os_name": "centos",
    "os_version": "7",
    "root_device_size": "8",
    "fs_type": "xfs",
    "repo_baseurl": "mirror.centos.org",
    "rpm_release_file": "centos-release-7-6.1810.2.el7.centos.x86_64.rpm",
    "iso_checksum": "38d5d51d9d100fd73df031ffd6bd8b1297ce24660dc8c13a3b8b4534a4bd291c",
    "iso_checksum_type": "sha256",
    "iso_name": "http://mirror.cogentco.com/pub/linux/centos/7.6.1810/isos/x86_64/CentOS-7-x86_64-Minimal-1810.iso",
    "metadata": "floppy/dummy_metadata.json"
  },

  "provisioners": [
    {
      "type": "file",
      "only": ["amazon-chroot"],
      "source": "files/10-growpart.cfg",
      "destination": "/tmp/10-growpart.cfg"
    },
    {
      "type": "file",
      "only": ["amazon-chroot"],
      "source": "files/cloud.cfg",
      "destination": "/tmp/cloud.cfg"
    },
    {
      "type": "file",
      "source": "local/trusted-certs",
      "destination": "/tmp"
    },
    {
      "type": "shell",
      "only": ["amazon-chroot"],
      "environment_vars": [
        "FS_TYPE={{user `fs_type`}}"
      ],
      "scripts": [
        "scripts/amazon-chroot/01-packages.sh",
        "scripts/amazon-chroot/02-config.sh",
        "scripts/amazon-chroot/03-services.sh",
        "scripts/amazon-chroot/04-network.sh",
        "scripts/amazon-chroot/05-cloud-init.sh",
        "scripts/amazon-chroot/06-grub.sh",
        "scripts/amazon-chroot/07-cfninit.sh"
      ]
    },
    {
      "type": "shell",
      "only": ["virtualbox-iso"],
      "environment_vars": [
        "FS_TYPE={{user `fs_type`}}"
      ],
      "scripts": [
        "scripts/virtualbox-iso/01-packages.sh",
        "scripts/virtualbox-iso/02-config.sh",
        "scripts/virtualbox-iso/03-services.sh",
        "scripts/virtualbox-iso/04-network.sh"
      ]
    },
    {
        "type": "ansible-local",
        "playbook_file": "ansible/playbook.yml",
        "role_paths": [
            "ansible/roles"
        ],
        "playbook_dir": "ansible",
        "galaxy_file": "ansible/requirements.yml"
    },
    {
      "type": "shell",
      "only": ["amazon-chroot"],
      "environment_vars": [
        "FS_TYPE={{user `fs_type`}}"
      ],
      "scripts": [
        "scripts/amazon-chroot/08-cleanup.sh"
      ]
    },
    {
      "type": "shell",
      "only": ["virtualbox-iso"],
      "environment_vars": [
        "FS_TYPE={{user `fs_type`}}"
      ],
      "scripts": [
        "scripts/virtualbox-iso/08-cleanup.sh"
      ]
    }
  ],

  "builders": [
    {
      "type": "amazon-chroot",
      "access_key": "{{user `aws_access_key`}}",
      "secret_key": "{{user `aws_secret_key`}}",
      "ami_name": "rhythmic/{{user `os_name`}}-{{user `os_version`}}-{{user `build_stage`}}-{{isotime \"2006-01-02-030405\" | clean_ami_name}}",
      "ami_description": "{{user `os_name`}} {{user `os_version`}} {{user `build_stage`}} image built on {{isotime \"2006-01-02\"}}",
      "ami_users": "{{user `aws_ami_users`}}",
      "from_scratch": true,
      "ami_virtualization_type": "hvm",
      "pre_mount_commands": [
        "echo 'Make sure gdisk is installed on builder'",
        "yum -y install gdisk",
        "echo 'Partition device'",
        "sgdisk -og {{.Device}}",
        "sgdisk -n 1:4096:0 -c 1:\"Linux\" -t 1:8300 {{.Device}}",
        "sgdisk -n 128:2048:4095 -c 128:\"BIOS Boot Partition\" -t 128:ef02 {{.Device}}",
        "echo 'Create desired filesystem on device'",
        "mkfs.{{user `fs_type`}} -L root {{.Device}}1",
        "sync"
      ],
      "post_mount_commands": [
        "echo 'RPM initial setup'",
        "rpm --root={{.MountPath}} --initdb",
        "echo 'Install base OS release RPM to lay down the basics in chroot'",
        "rpm --nodeps --root={{.MountPath}} -ivh http://{{user `repo_baseurl`}}/{{user `os_name`}}/{{user `os_version`}}/os/x86_64/Packages/{{user `rpm_release_file`}}",
        "echo 'Make sure yum and deltarpm are installed'",
        "yum --installroot={{.MountPath}} -y install yum deltarpm",
        "echo 'Write out variable for use by provisioning scripts'",
        "echo 'DEVICE={{.Device}}' > {{.MountPath}}/tmp/env_vars"
      ],
      "root_volume_size": "{{user `root_device_size`}}",
      "root_device_name": "/dev/xvda",
      "ami_block_device_mappings": [
        {
          "device_name": "/dev/xvda",
          "delete_on_termination": true,
          "volume_type": "gp2"
        }
      ],
      "copy_files": ["/etc/resolv.conf"],
      "tags": {
        "buildStage": "{{user `build_stage`}}",
        "buildDate": "{{isotime \"2006-01-02\"}}",
        "os": "{{user `os_name`}}",
        "version": "{{user `os_version`}}"
      }
    },
    {
      "type": "virtualbox-iso",
       "boot_command": ["<tab> text ks=http://{{.HTTPIP}}:{{.HTTPPort}}/ks-default.cfg<enter><wait>"],
      "boot_wait": "10s",
      "disk_size": 10240,
      "guest_os_type": "RedHat_64",
      "headless": "true",
      "http_directory": "http",
      "iso_checksum": "{{user `iso_checksum`}}",
      "iso_checksum_type": "{{user `iso_checksum_type`}}",
      "iso_url": "{{user `iso_name`}}",
      "output_directory": "packer-{{user `template`}}-vbox",
      "shutdown_command": "/sbin/halt -h -p",
      "ssh_username": "root",
      "ssh_password": "",
      "vm_name": "{{ user `template` }}"
    }
  ]
}
